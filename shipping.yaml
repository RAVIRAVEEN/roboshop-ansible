- name: installing shipping component
  hosts: mysql
  become: yes
  tasks:
    vars:
    MYSQL_PASSWORD: roboshop@1

- name: install maven
  ansible.builtin.dnf:
    name:  maven
    state: present
-  name: create user roboshop
   ansible.builtin.user:
    name: roboshop
    state: present

- name: create directory
  ansible.builtin.file:
    path: /app 
    state: directory


- name: downloading application
  ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

- name: extracting application
  ansible.builtin.unarchive:
      src:  /tmp/shipping.zip
      dest: /app
      remote_src: yes


- name: Install java 
  ansible.builtin.command: mvn clean package
  args:
    chdir: /app


- name: renaming jar file
  ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
  args:
    chdir: /app

- name: Copying shipping.service
  ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service



- name: start and enable shipping
  ansible.builtin.service:
      daemon_reload: true
      name: shipping
      state: restarted
      enabled: yes 

  
- name: install mysql 
  ansible.builtin.dnf:
      name: mysql
      state: present

- name: check cities schema exists or not 
  ansible.builtin.command: mysql -h mysql.devopsrank.online -uroot -p{{MYSQL_PASSWORD}} -sN -e "SELECT COUNT(*) FROM INFORMATION-SCHEMA.SCHEMATA WHERE SCHEMA_NAME="cities"
  register: schema

- name: print output 
  ansible.builtin.debug:
   msg: "schema output {{ schema }}"

# - name: load cities data 
#   ansible.builtin.shell: mysql -h mysql.devopsrank.online -uroot -p{{MYSQL_PASSWORD}} </app/schema/shipping.sql
#   when: schema.stdout ! = "1"
